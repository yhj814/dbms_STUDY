CREATE TABLE TBL_STUDENT(
   ID NUMBER CONSTRAINT PK_STUDENT PRIMARY KEY,
   STUDENT_NAME VARCHAR2(255) NOT NULL
);

/*TBL_STUDENT 테이블에서 ID와 STUDENT_NAME 전체 조회*/
SELECT ID, STUDENT_NAME FROM TBL_STUDENT;

INSERT INTO TBL_STUDENT (ID, STUDENT_NAME)
VALUES(1, '한동석');

UPDATE TBL_STUDENT 
SET STUDENT_NAME = '홍길동'
WHERE ID = 1;

DELETE FROM TBL_STUDENT
WHERE ID = 1;
/**********************************************************************/
CREATE TABLE TBL_ZOO(
   ID NUMBER CONSTRAINT PK_ZOO PRIMARY KEY,
   ZOO_NAME VARCHAR2(255),
   ZOO_ADDRESS VARCHAR2(255),
   ZOO_ADDRESS_DETAIL VARCHAR2(255),
   ZOO_MAX_ANIMAL NUMBER DEFAULT 0
);

CREATE TABLE TBL_ANIMAL(
   ID NUMBER CONSTRAINT PK_ANIMAL PRIMARY KEY,
   ANIMAL_NAME VARCHAR2(255),
   ANIMAL_TYPE VARCHAR2(255),
   ANIMAL_AGE NUMBER DEFAULT 0,
   ANIMAL_HEIGHT NUMBER(16, 5),
   ANIMAL_WEIGHT NUMBER(16, 5),
   ZOO_ID NUMBER,
   CONSTRAINT FK_ANIMAL_ZOO FOREIGN KEY(ZOO_ID)
   REFERENCES TBL_ZOO(ID)
);

ALTER TABLE TBL_ANIMAL MODIFY(ANIMAL_HEIGHT NUMBER(16, 5));
ALTER TABLE TBL_ANIMAL MODIFY(ANIMAL_WEIGHT NUMBER(16, 5));

/*시퀀스를 직접 만들어서 사용해야 한다.*/
CREATE SEQUENCE SEQ_ZOO;

SELECT * FROM TBL_ZOO;

/*INSERT INTO TBL_ZOO(ID, ZOO_NAME, ZOO_ADDRESS, ZOO_ADDRESS_DETAIL, ZOO_MAX_ANIMAL)
VALUES(SEQ_ZOO.NEXTVAL, '서울랜드', '서울', '랜드', 100);*/
INSERT INTO TBL_ZOO
VALUES(SEQ_ZOO.NEXTVAL, '애버랜드', '경기도', '용인', 500);

SELECT ID, ZOO_NAME, ZOO_ADDRESS, ZOO_ADDRESS_DETAIL, ZOO_MAX_ANIMAL FROM TBL_ZOO;

UPDATE TBL_ZOO
SET ZOO_MAX_ANIMAL = 5000
WHERE ZOO_NAME = '애버랜드';

DELETE FROM TBL_ZOO
WHERE ID = 1;

CREATE SEQUENCE SEQ_ANIMAL;

SELECT * FROM TBL_ANIMAL;

INSERT INTO TBL_ANIMAL
VALUES(SEQ_ANIMAL.NEXTVAL, '사자', '맹수', 3, 87.5, 70.789, 1);



/*애버랜드(2) 동물원의 동물만 조회*/
SELECT ID, ANIMAL_NAME, ANIMAL_TYPE, ANIMAL_AGE, ANIMAL_HEIGHT, ANIMAL_WEIGHT, ZOO_ID 
FROM TBL_ANIMAL
WHERE ZOO_ID = 2;
/**********************************************************************/
CREATE TABLE TBL_MEMBER(
   ID NUMBER CONSTRAINT PK_MEMBER PRIMARY KEY,
   MEMBER_ID VARCHAR2(255) CONSTRAINT UK_MEMBER UNIQUE NOT NULL,
   MEMBER_PASSWORD VARCHAR2(255) NOT NULL,
   MEMBER_NAME VARCHAR2(255) NOT NULL,
   MEMBER_ADDRESS VARCHAR2(255) NOT NULL,
   MEMBER_EMAIL VARCHAR2(255),
   MEMBER_BIRTH DATE
);

CREATE TABLE TBL_PRODUCT(
   ID NUMBER CONSTRAINT PK_PRODUCT PRIMARY KEY,
   PRODUCT_NAME VARCHAR2(255) NOT NULL,
   PRODUCT_PRICE NUMBER DEFAULT 0,
   PRODUCT_STOCK NUMBER DEFAULT 0
);

CREATE TABLE TBL_ORDER(
   ID NUMBER CONSTRAINT PK_ORDER PRIMARY KEY,
   ORDER_DATE DATE DEFAULT CURRENT_TIMESTAMP,
   MEMBER_ID NUMBER,
   PRODUCT_ID NUMBER,
   CONSTRAINT FK_ORDER_MEMBER FOREIGN KEY(MEMBER_ID)
   REFERENCES TBL_MEMBER(ID),
   CONSTRAINT FK_ORDER_PRODUCT FOREIGN KEY(PRODUCT_ID)
   REFERENCES TBL_PRODUCT(ID)
);

CREATE SEQUENCE SEQ_MEMBER;

/*각 테이블에 3개 이상씩 정보를 추가하고, 조회한다.*/
SELECT * FROM TBL_MEMBER;

INSERT INTO TBL_MEMBER
VALUES(SEQ_MEMBER.NEXTVAL, 'hds1234', '1234', '한동석', '경기도 남양주', 'hds1234@gamilc.om' , TO_DATE('2000-12-04', 'YYYY-MM-DD'));
INSERT INTO TBL_MEMBER
VALUES(SEQ_MEMBER.NEXTVAL, 'hgd1234', '1234', '홍길동', '서울시 강남구', 'hgd1234@gamilc.om' , TO_DATE('2020-11-24', 'YYYY-MM-DD'));
INSERT INTO TBL_MEMBER
VALUES(SEQ_MEMBER.NEXTVAL, 'lss1234', '1234', '이순신', '대구광역시 달서구', 'lss1234@gamilc.om' , TO_DATE('2010-01-04', 'YYYY-MM-DD'));

SELECT ID, MEMBER_ID, MEMBER_PASSWORD, MEMBER_NAME, MEMBER_ADDRESS, MEMBER_EMAIL, MEMBER_BIRTH 
FROM TBL_MEMBER;

CREATE SEQUENCE SEQ_PRODUCT;

SELECT * FROM TBL_PRODUCT;

INSERT INTO TBL_PRODUCT
VALUES(SEQ_PRODUCT.NEXTVAL, '안경', 129000, 32);
INSERT INTO TBL_PRODUCT
VALUES(SEQ_PRODUCT.NEXTVAL, '키보드', 344000, 2);
INSERT INTO TBL_PRODUCT
VALUES(SEQ_PRODUCT.NEXTVAL, '마우스', 174000, 102);

SELECT ID, PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_STOCK FROM TBL_PRODUCT;

CREATE SEQUENCE SEQ_ORDER;

SELECT * FROM TBL_ORDER;

INSERT INTO TBL_ORDER (ID, MEMBER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 2, 3);
INSERT INTO TBL_ORDER (ID, MEMBER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 1, 3);
INSERT INTO TBL_ORDER (ID, MEMBER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 3, 1);

SELECT ID, ORDER_DATE, MEMBER_ID, PRODUCT_ID FROM TBL_ORDER;

/*수정 2회*/
UPDATE TBL_ORDER
SET PRODUCT_ID = 1
WHERE ID = 1;

UPDATE TBL_PRODUCT
SET PRODUCT_PRICE = PRODUCT_PRICE * 1.1

/*삭제 2회*/
DELETE FROM TBL_ORDER
WHERE ID = 3;

DELETE FROM TBL_PRODUCT
WHERE ID = 2;


CREATE TABLE TBL_MEMBER(
   ID NUMBER CONSTRAINT PK_MEMBER PRIMARY KEY,
   MEMBER_ID VARCHAR2(255) CONSTRAINT UK_MEMBER UNIQUE NOT NULL,
   MEMBER_PASSWORD VARCHAR2(255) NOT NULL,
   MEMBER_NAME VARCHAR2(255) NOT NULL,
   MEMBER_ADDRESS VARCHAR2(255) NOT NULL,
   MEMBER_EMAIL VARCHAR2(255),
   MEMBER_BIRTH DATE
);
--조회
SELECT * FROM TBL_MEMBER;

--시퀀스는 매번 아이디를 입력안하고 다음 VALUES를 넣을때마다 자동으로 1씩 증가함
CREATE SEQUENCE SEQ_MEMBER;


--삽입(자료형 맞춰서 넣기) 전체값 넣을거면 비우기
INSERT INTO TBL_MEMBER (ID,MEMBER_ID,MEMBER_PASSWORD,MEMBER_NAME,MEMBER_ADDRESS,MEMBER_EMAIL,MEMBER_BIRTH)
VALUES(SEQ_MEMBER.NEXTVAL, 'YBR928', '1234', '유보름', '구미시', 'YBR928@NAVER.COM',TO_DATE('2004-9-28 08:30:30', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO TBL_MEMBER (ID,MEMBER_ID,MEMBER_PASSWORD,MEMBER_NAME,MEMBER_ADDRESS,MEMBER_EMAIL,MEMBER_BIRTH)
VALUES(SEQ_MEMBER.NEXTVAL, 'YHJ814', '1334', '용호중', '원주시', 'YHJ814@NAVER.COM',TO_DATE('2000-8-14 08:30:40', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO TBL_MEMBER
VALUES(SEQ_MEMBER.NEXTVAL, 'LJM', '1534', '이지민', '용인시', 'LJM@NAVER.COM',TO_DATE('2000-5-14 04:30:30', 'YYYY-MM-DD HH24:MI:SS'));

--변경
UPDATE TBL_MEMBER
SET MEMBER_ADDRESS = '서울시'
WHERE ID=3;

--삭제
DELETE FROM TBL_MEMBER
WHERE ID=3;

























